version: "3"

services:
  unbound:
    image: klutchell/unbound:latest
    container_name: unbound
    hostname: unbound
    networks:
      internal_network:
        ipv4_address: 172.20.0.2
    volumes:
      - './etc-unbound/unbound.conf:/etc/unbound/unbound.conf'
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    networks:
      internal_network:
        ipv4_address: 172.20.0.3
    environment:
      TZ: "${TZ}"
      PIHOLE_DNS_: "172.20.0.2#53"
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    restart: unless-stopped
    depends_on:
      - unbound

  squid:
    image: ubuntu/squid:latest
    container_name: squid
    user: "1000:1000"
    hostname: squid
    networks:
      internal_network:
        ipv4_address: 172.20.0.4
    volumes:
      - './etc-squid/squid.conf:/etc/squid/squid.conf'
      - './var-log-squid:/var/log/squid'
      - './etc-squid/blocklists:/etc/squid/blocklists'
    ports:
      - "3128:3128/tcp"
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: mongo
    hostname: mongo
    networks:
      internal_network:
        ipv4_address: 172.20.0.5
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${USR}"
      MONGO_INITDB_ROOT_PASSWORD: "${PASS}"
    volumes:
      - './etc-mongo:/data/db'
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer
    networks:
      internal_network:
        ipv4_address: 172.20.0.8
    ports:
      - "9000:9000/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    restart: unless-stopped

  samba:
    image: dperson/samba
    container_name: samba
    hostname: samba
    network_mode: host
    volumes:
      - './etc-samba/smb.conf:/etc/samba/smb.conf'
      - '/mnt/shared-folders:/mnt/shared-folders'
    restart: unless-stopped

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    hostname: suricata-home-network-guardian
    network_mode: host
    volumes:
      - './etc-suricata:/etc/suricata'
      - './var-log-suricata:/var/log/suricata'
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    command: ["-c", "/etc/suricata/suricata.yaml", "-i", "eth0"]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    network_mode: host
    volumes:
      - './etc-prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus_data:/prometheus'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    network_mode: host
    volumes:
      - './etc-grafana/provisioning:/etc/grafana/provisioning'
      - './etc-grafana/dashboards:/etc/grafana/dashboards'
      - 'grafana_data:/var/lib/grafana'
    restart: unless-stopped

networks:
  internal_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  prometheus_data:
  grafana_data: