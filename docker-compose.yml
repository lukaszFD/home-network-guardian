services:
  unbound:
    image: klutchell/unbound:latest
    container_name: unbound
    hostname: unbound
    networks:
      internal_network:
        ipv4_address: 172.20.0.2
    volumes:
      - './etc-unbound/unbound.conf:/etc/unbound/unbound.conf'
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    networks:
      internal_network:
        ipv4_address: 172.20.0.3
      squid_network:
        ipv4_address: 172.40.0.2
    environment:
      TZ: "${TZ}"
      PIHOLE_DNS_: "172.20.0.2#53"
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    restart: unless-stopped
    depends_on:
      - unbound
  
  squid:
    image: ubuntu/squid:latest
    container_name: squid
    user: "root"
    hostname: squid
    networks:
      squid_network:
        ipv4_address: 172.40.0.3
    volumes:
      - './etc-squid/squid.conf:/etc/squid/squid.conf'
      - './var-log-squid:/var/log/squid'
      - './etc-squid/blocklists:/etc/squid/blocklists'
    ports:
      - "3128:3128/tcp"
    restart: unless-stopped
    
  squid-tabl:
    image: ubuntu/squid:latest
    container_name: squid-tabl
    user: "root"
    hostname: squid-tabl
    networks:
      squid_network:
        ipv4_address: 172.40.0.4
    volumes:
      - './etc-squid-tabl/squid.conf:/etc/squid/squid.conf'
      - './var-log-squid-tabl:/var/log/squid'
    ports:
      - "3129:3129/tcp"
    restart: unless-stopped

  mongo:
    image: mongo
    container_name: mongo
    hostname: mongo
    network_mode: host
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_PASSWORD}"
    volumes:
      - './etc-mongo:/data/db'
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
    container_name: elasticsearch
    hostname: elasticsearch
    network_mode: host
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - './etc-elasticsearch:/usr/share/elasticsearch/data'
    ports:
      - "9200:9200"
    restart: unless-stopped
    
  graylog:
    image: graylog/graylog:6.1
    container_name: graylog
    hostname: graylog
    network_mode: host
    environment:
     - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
     - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET}
     - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2}
     - GRAYLOG_MONGODB_URI=mongodb://graylog:${MONGODB_PASSWORD}@127.0.0.1:27017/graylog
     - GRAYLOG_ELASTICSEARCH_HOSTS=http://127.0.0.1:9200
    volumes:
      - './etc-graylog:/etc/graylog'
      - './var-log-graylog:/var/log/graylog'
    depends_on:
      - mongo
      - elasticsearch
    restart: unless-stopped

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    hostname: suricata-home-network-guardian
    network_mode: host
    volumes:
      - './etc-suricata:/etc/suricata'
      - './var-log-suricata:/var/log/suricata'
    cap_add:
      - NET_ADMIN
      - SYS_NICE
    command: ["-c", "/etc/suricata/suricata.yaml", "-i", "eth0"]
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    network_mode: host
    volumes:
      - './etc-prometheus/prometheus.yml:/etc/prometheus/prometheus.yml'
      - 'prometheus_data:/prometheus'
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    network_mode: host
    volumes:
      - './etc-grafana/provisioning:/etc/grafana/provisioning'
      - './etc-grafana/dashboards:/etc/grafana/dashboards'
      - 'grafana_data:/var/lib/grafana'
    restart: unless-stopped
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    devices:
      - /dev/kmsg:/dev/kmsg
    restart: unless-stopped
    privileged: true
    command:
      - --housekeeping_interval=30s
      - --max_housekeeping_interval=60s

networks:
  internal_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
  squid_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.0.0/24
  portainer_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.50.0.0/24

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  