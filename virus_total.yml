services:
  mysqldb:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: dns_logs
      MYSQL_ROOT_HOST: "%"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - mysql_network

  virustotal_scanner:
    build:
      context: .
      dockerfile: Dockerfile.passive_dns.virustotal
    container_name: virustotal_scanner
    ports:
      - "5000:5000"
    restart: unless-stopped
    volumes:
      - ./var-virustotal_logs:/app/logs
    networks:
      - mysql_network
    depends_on:
      - mysqldb
    environment:
      MYSQL_HOST: "${MYSQL_HOST}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      VIRUSTOTAL_API_KEY: "${VIRUSTOTAL_API_KEY}"

  dns_log_processor:
    build:
      context: .
      dockerfile: Dockerfile.passive_dns.dns
    container_name: dns_log_processor
    restart: unless-stopped
    networks:
      - mysql_network
    volumes:
      - './var-log-passive-dns:/var/log/dns'
    depends_on:
      - mysqldb
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    command: python /app/dns_log_processor.py
    
  dns_scanner:
    build:
      context: .
      dockerfile: Dockerfile.passive_dns.scanner
    container_name: dns_scanner
    restart: unless-stopped
    networks:
      - mysql_network
    depends_on:
      - mysqldb
      - virustotal_scanner
    environment:
      MYSQL_HOST: "${MYSQL_HOST}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
    command: python /app/dns_scanner.py

networks:
  mysql_network:
    external: true
    ipam:
      config:
        - subnet: 172.61.0.0/24
volumes:
  mysql_data: